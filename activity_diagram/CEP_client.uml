@startuml
start
:SST Client: Intiailize device & show screen;

fork

-> Initiate an agent\n for face recognition;
repeat:Fetch image;
  :Recognize faces;

  :Count enrolled faces;

  if (count == 0) then (yes)
    :Close any
     open session;
  else (no)
    :Choose
     top-rank face;
    if (Different face\n from Session?) then (yes)
      :Greet user;
    else (no)
    endif
    :Renew session;
  endif
repeat while (quit?) is (no)

fork again

-> Initiate an agent\n for voice recognition;
repeat:Fetch sound;
  :Recognize voice;

  if ("Wakeup word"?) then (no)
  else (yes)
    :Record following\n command;
    :Send command\nto a voice\n **smart service**;
    :Get response\nfrom the service;
    :Perform its action;
  endif
repeat while (quit?) is (no)

fork again

while (CPU idle?) is (yes)
  :Gather user
   activity & log;
  :send to
   to Cloud;
endwhile

fork again

->Initiate UI thread;

repeat:Receive an Request;

  -> if the "Request" is;

  if ("Sign Up for SST") then (yes)
    repeat:Start 'Enroll Face';
      :Fetch image;
      :Count 
       unenrolled faces;
    repeat while (count == 1) is (no)
    :Store face
     features in Anaytics;
    :Receive
     User info.;
    :Send user profile
     to Cloud;
    :Welcome new user;
  elseif ("Browse Service") then (yes)
    :Get service list
    from Cloud;

    :Show Smart
     Services;
  elseif ("Run Service\n on Local/Cloud") then (yes)
    :Get service info.
    from Cloud;

    :Play the service;
  elseif ("Manage Service\n and app") then (yes)
    :Manage Service\n and app;
  elseif ("Receive\nTV Channels for\n Broadcast/Cable") then (yes)
    :Get channel list;

    :Show TV Channels
     for Broadcast/Cable;
  elseif ("Change channel") then (yes)
    :Change channel;
  elseif ("Enable/Disable\n voice command") then (yes)
    :Ask voice\n recognition agent\n to pause/resume;
  elseif ("Manage user profile",\nor\n "Browse payment history"\nor\n  "Update credicard info"\nor\n "Get bill for service"\nor\n "Pay with credicard"\nor\n "Organize menu Layout") then (yes)
    :Do the requested action;
  else (Handle other
   requests)
  endif

repeat while (quit?) is (no)
 

endfork

stop
@enduml